const canvas = document.getElementById("gameCanvas");
const ctx = canvas.getContext("2d");

// Ø£Ø¬Ø²Ø§Ø¡ Ø§Ù„Ø®Ù„ÙŠØ© Ø§Ù„Ø¹ØµØ¨ÙŠØ©
const neuronParts = [
  { name: "Ø¬Ø³Ù… Ø§Ù„Ø®Ù„ÙŠØ©", x: 400, y: 300, placed: false },
  { name: "Ø§Ù„Ù…Ø­ÙˆØ± (Axon)", x: 500, y: 300, placed: false },
  { name: "Ø§Ù„Ø´Ø¬Ø±Ø© Ø§Ù„Ø¹ØµØ¨ÙŠØ©", x: 300, y: 300, placed: false },
  { name: "Ø§Ù„ØºØ´Ø§Ø¡ Ø§Ù„Ù…Ø§ÙŠÙ„ÙŠÙ†ÙŠ", x: 550, y: 300, placed: false },
  { name: "Ø§Ù„ØªØ´Ø§Ø¨Ùƒ Ø§Ù„Ø¹ØµØ¨ÙŠ", x: 600, y: 300, placed: false }
];

let draggedPart = null;

function draw() {
  ctx.clearRect(0, 0, canvas.width, canvas.height);

  // Ø®Ø·ÙˆØ· Ø§Ù„Ø¥Ø±Ø´Ø§Ø¯
  ctx.setLineDash([5]);
  ctx.strokeStyle = "#999";
  ctx.strokeRect(380, 280, 40, 40); // Ø¬Ø³Ù… Ø§Ù„Ø®Ù„ÙŠØ©
  ctx.strokeRect(480, 280, 40, 40); // Axon
  ctx.strokeRect(280, 280, 40, 40); // Dendrites
  ctx.setLineDash([]);

  // Ø±Ø³Ù… Ø§Ù„Ø£Ø¬Ø²Ø§Ø¡
  neuronParts.forEach(part => {
    ctx.fillStyle = part.placed ? "#aaa" : "#007acc";
    ctx.fillRect(part.x, part.y, 40, 40);
    ctx.fillStyle = "#fff";
    ctx.font = "12px Arial";
    ctx.fillText(part.name.split(" ")[0], part.x + 2, part.y + 25);
  });

  if (neuronParts.every(p => p.placed)) {
    document.getElementById("infoBox").innerHTML = `
      ðŸŽ‰ Ø±Ø§Ø¦Ø¹! Ù„Ù‚Ø¯ Ø¨Ù†ÙŠØª Ø®Ù„ÙŠØ© Ø¹ØµØ¨ÙŠØ© ÙƒØ§Ù…Ù„Ø©!<br>
      <button onclick="completeLevel()">Ø¥ÙƒÙ…Ø§Ù„ Ø§Ù„Ù…Ø³ØªÙˆÙ‰</button>
    `;
  }
}

function completeLevel() {
  alert("âœ… ØªÙ‡Ø§Ù†ÙŠÙ†Ø§! Ù„Ù‚Ø¯ Ø£ØªÙ…Ù…Øª Ø¨Ù†Ø§Ø¡ Ø®Ù„ÙŠØ© Ø¹ØµØ¨ÙŠØ©.");
  document.getElementById("infoBox").innerHTML = `
    ðŸ“œ Ø´Ù‡Ø§Ø¯Ø© Ø¥Ù†Ø¬Ø§Ø²<br>
    <strong>Ø£Ù†Øª Ø§Ù„Ø¢Ù† Ù‚Ø§Ø¯Ø± Ø¹Ù„Ù‰ Ø¨Ù†Ø§Ø¡ Ø®Ù„Ø§ÙŠØ§ Ø¹ØµØ¨ÙŠØ©!</strong><br>
    ØªÙ… Ø¥Ù†Ù‡Ø§Ø¡ Ø§Ù„Ù…Ø³ØªÙˆÙ‰ Ø¨Ù†Ø¬Ø§Ø­.
  `;
}

canvas.addEventListener("mousedown", e => {
  const rect = canvas.getBoundingClientRect();
  const mouseX = e.clientX - rect.left;
  const mouseY = e.clientY - rect.top;

  neuronParts.forEach(part => {
    if (!part.placed &&
        mouseX > part.x && mouseX < part.x + 40 &&
        mouseY > part.y && mouseY < part.y + 40) {
      draggedPart = part;
    }
  });
});

canvas.addEventListener("mousemove", e => {
  if (draggedPart) {
    const rect = canvas.getBoundingClientRect();
    const mouseX = e.clientX - rect.left;
    const mouseY = e.clientY - rect.top;
    draggedPart.x = mouseX - 20;
    draggedPart.y = mouseY - 20;
    draw();
  }
});

canvas.addEventListener("mouseup", () => {
  if (draggedPart) {
    if (draggedPart.name === "Ø¬Ø³Ù… Ø§Ù„Ø®Ù„ÙŠØ©" && draggedPart.x > 370 && draggedPart.x < 390)
      draggedPart.placed = true;

    if (draggedPart.name === "Ø§Ù„Ù…Ø­ÙˆØ± (Axon)" && draggedPart.x > 470 && draggedPart.x < 490)
      draggedPart.placed = true;

    if (draggedPart.name === "Ø§Ù„Ø´Ø¬Ø±Ø© Ø§Ù„Ø¹ØµØ¨ÙŠØ©" && draggedPart.x > 270 && draggedPart.x < 290)
      draggedPart.placed = true;

    draggedPart = null;
    draw();
  }
});

draw(); // Ø¨Ø¯Ø¡ Ø§Ù„Ù„Ø¹Ø¨Ø©
